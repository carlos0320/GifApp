{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","console","log","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","proTypes","PropTypes","string","isRequired","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","defaultCategories","index","ReactDOM","render","document","getElementById"],"mappings":"oMAKaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAERC,mBAAS,IAFD,mBAEtCC,EAFsC,KAE1BC,EAF0B,KAS9CC,QAAQC,IAAI,iCAcZ,OAEI,sBAAMC,SAdW,SAACC,GAClBA,EAAEC,iBACFJ,QAAQC,IAAK,4BAETH,EAAWO,OAAOC,OAAS,IAC3BV,GAAe,SAAAW,GAAU,OAAMT,GAAN,mBAAqBS,OAC9CR,EAAc,MAQlB,SAEI,uBACAS,KAAK,OACLC,MAAUX,EACVY,SA1BkB,SAAEP,GAExBJ,EAAeI,EAAEQ,OAAOF,a,+BCTnBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,0FAE6EC,UAAUH,GAFvF,sBAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAMD,EAAKE,KAAK,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVtB,kBAcZM,GAdY,4CAAH,sD,gBCCPO,EAAc,SAAC,GAAuB,IAApBH,EAAmB,EAAnBA,MAAOV,EAAY,EAAZA,IAGlC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QAKjBG,EAAYI,SAAW,CACnBP,MAAOQ,IAAUC,OAAOC,WACxBpB,IAAKkB,IAAUC,OAAOC,YCVnB,IAAMC,EAAU,SAAC,GAAkB,IAAhBvB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEdhB,mBAAS,CAC/BuB,KAAM,GACNiB,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAyBxC,OAlBAC,qBAAW,WAEP5B,EAASC,GACJ4B,MAAM,SAAAC,GAEHC,YAAY,WAERJ,EAAS,CACLnB,KAAMsB,EACNL,SAAS,MAGd,UAGZ,CAAExB,IAGEyB,EDtBkBM,CAAc/B,GAA/BO,EAF6B,EAE7BA,KAAKiB,EAFwB,EAExBA,QAGb,OACI,gCACI,6BAAMxB,IAEJwB,GAAW,2CAEZ,oBAAIR,UAAU,YAAd,SAEOT,EAAKE,KAAK,SAAAC,GAAG,OACT,cAAC,EAAD,eAESA,GADGA,EAAIC,aEjB3BqB,EAAe,SAAC,GAAgC,IAAD,IAA7BC,yBAA6B,MAAT,GAAS,IAGlBjD,mBAAUiD,GAHQ,mBAGhDvC,EAHgD,KAGpCX,EAHoC,KAOxD,OACI,gCACI,yCACA,kFACA,cAAC,EAAD,CACIW,WAAYA,EACZX,cAAeA,IAEnB,uBAGA,6BACMW,EAAWe,KAAK,SAACT,EAAUkC,GAAX,OACd,cAAC,EAAD,CAEIlC,SAAaA,GADLA,Y,MCnBhCmC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.ec6e6370.chunk.js","sourcesContent":["\r\nimport React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    \r\n    const [ inputValue, setInputValue ] = useState('');\r\n    \r\n    const handleInputChange = ( e ) => {\r\n        // console.log( e.target.value );\r\n        setInputValue( e.target.value )\r\n    }\r\n\r\n    console.log('handleInputChange llamado!!!!')\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log( 'Handle submit llamado!! ');\r\n\r\n        if( inputValue.trim().length > 2){\r\n            setCategories( categories => [ inputValue, ...categories])\r\n            setInputValue('');\r\n        }\r\n    }\r\n    \r\n    \r\n    \r\n    return (\r\n        \r\n        <form onSubmit = { handleSubmit }>\r\n            \r\n            <input\r\n            type=\"text\"\r\n            value = { inputValue }\r\n            onChange = { handleInputChange }\r\n            />\r\n        </form>\r\n        \r\n        )\r\n    }\r\n\r\n    AddCategory.propTypes = {\r\n        setCategories: PropTypes.func.isRequired\r\n    }\r\n\r\n\r\n    ","\r\n\r\nexport const getGifs = async ( category ) => {\r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=Sc5rXlymOCNSNJ1NFyJVxLZdcPVyW3T3&q=${ encodeURI(category) }&limit=12`\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs =data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;    \r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const GifGridItem = ( { title, url  } ) => {\r\n\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nGifGridItem.proTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    \r\n    const { data,loading } = useFetchGifs( category );\r\n\r\n\r\n    return (\r\n        <div >\r\n            <h3>{ category }</h3>\r\n\r\n            { loading && <p>Loading...</p> }\r\n\r\n             <ol className=\"card-grid\">\r\n                {\r\n                    data.map( img => (\r\n                        <GifGridItem\r\n                            key = { img.id }\r\n                            { ...img }\r\n                        />\r\n                    ))\r\n                }\r\n            </ol> \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nGifGrid.propTypes = {\r\n    category: PropTypes.string.isRequired\r\n}","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        \r\n        getGifs( category )\r\n            .then( imgs => {\r\n\r\n                setTimeout( () => {\r\n\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n                    \r\n                }, 3000)\r\n            })\r\n\r\n    }, [ category ])\r\n\r\n    \r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = ({ defaultCategories = [] }) => {\r\n\r\n\r\n    const [ categories, setCategories ] = useState( defaultCategories );\r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <h2>GIF App</h2>\r\n            <p>Please enter the name of the Gif you want display</p>\r\n            <AddCategory\r\n                categories={categories}\r\n                setCategories={setCategories}\r\n            />\r\n            <hr></hr>\r\n           \r\n\r\n            <ol>\r\n                { categories.map( (category, index) => (\r\n                    <GifGrid\r\n                        key = { category }\r\n                        category = { category }\r\n                    />\r\n                ))}\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { GifExpertApp } from './GifExpertApp';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(  \r\n    <GifExpertApp />,  \r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}